<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
    ">

	<!-- <import resource="classpath:/configfiles/spring/profiles/foundationContextAllFeatures.xml"/>  -->

	<context:component-scan base-package="de.metacoder.blog" />
	
	
	<cache:annotation-driven />
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache" />
	</bean>
	
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
		<property name="shared" value="true" />
	</bean>
	
	
	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="#{systemProperties.getProperty('blogConfig') != null ? systemProperties.blogConfig : 'classpath:blogConfig.properties'}" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<jpa:repositories base-package="de.metacoder.blog" />

	<bean id="entityManagerFactory"	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="blog.persistence" />
		<property name="dataSource" ref="configuredDataSource" />

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${hibernate.showsql}" />
				<property name="databasePlatform" value="${database.hibernate.dialect}" />
			</bean>
		</property>

		<property name="jpaProperties">
       		<props>
           		<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
           		<prop key="hibernate.default_schema">${hibernate.defaultschema}</prop>
        	</props>
        </property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="configuredDataSource" class="org.apache.commons.dbcp.BasicDataSource"	destroy-method="close">
		<property name="driverClassName" value="${database.jdbc.driver}" />
		<property name="url" value="${database.jdbc.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="initialSize" value="${database.connectionpool.initsize}" />
		<property name="maxActive" value="${database.connectionpool.maxactive}" />
		<!-- testOnBorrow is currently default true but we define it here again to make sure that its true for future versions of the basic data source. -->
		<property name="testOnBorrow" value="true"/>
		<property name="validationQuery" value="SELECT 1"/>
	</bean>
</beans>